   1                             	r8	=	0xffef0
   2                             	r16	=	0xffee8
   3                             	r24	=	0xffee0
   4                             	r9	=	0xffef1
   5                             	r17	=	0xffee9
   6                             	r25	=	0xffee1
   7                             	r10	=	0xffef2
   8                             	r18	=	0xffeea
   9                             	r26	=	0xffee2
  10                             	r11	=	0xffef3
  11                             	r19	=	0xffeeb
  12                             	r27	=	0xffee3
  13                             	r12	=	0xffef4
  14                             	r20	=	0xffeec
  15                             	r28	=	0xffee4
  16                             	r13	=	0xffef5
  17                             	r21	=	0xffeed
  18                             	r29	=	0xffee5
  19                             	r14	=	0xffef6
  20                             	r22	=	0xffeee
  21                             	r30	=	0xffee6
  22                             	r15	=	0xffef7
  23                             	r23	=	0xffeef
  24                             	r31	=	0xffee7
  25                             	MDUC	=	0xf00e8
  26                             	MDAL	=	0xffff0
  27                             	MDAH	=	0xffff2
  28                             	MDBL	=	0xffff6
  29                             	MDBH	=	0xffff4
  30                             	MDCL	=	0xf00e0
  31                             	MDCH	=	0xf00e2
  32                             	.text
  33                             	.Ltext0:
  34                             		.global	_Display_Mode
  35                             		.section	.bss.Display_Mode,"aw",@nobits
  38                             	_Display_Mode:
  39 0000 00                      		.zero	1
  40                             		.comm	_Power_failure,1,1
  41                             		.section	.rodata
  42                             	.LC0:
  43 0000 2D 2D 00                		.string	"--"
  44                             		.section	.text.main,"ax",@progbits
  45                             		.global	_main
  47                             	_main:
  48                             	.LFB0:
  49                             		.file 1 "../src/r_main.c"
   1:../src/r_main.c **** /**************************************************************************************************
   2:../src/r_main.c **** * DISCLAIMER
   3:../src/r_main.c **** * This software is supplied by Renesas Electronics Corporation and is only intended for use with Re
   4:../src/r_main.c **** * No other uses are authorized. This software is owned by Renesas Electronics Corporation and is pr
   5:../src/r_main.c **** * applicable laws, including copyright laws. 
   6:../src/r_main.c **** * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING THIS SOFTWARE, WHETHE
   7:../src/r_main.c **** * OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULA
   8:../src/r_main.c **** * NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED.TO THE MAXIMUM EXTENT PERMITTED N
   9:../src/r_main.c **** * LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE 
  10:../src/r_main.c **** * INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS SOFTWARE, E
  11:../src/r_main.c **** * ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
  12:../src/r_main.c **** * Renesas reserves the right, without notice, to make changes to this software and to discontinue t
  13:../src/r_main.c **** * of this software. By using this software, you agree to the additional terms and conditions found 
  14:../src/r_main.c **** * following link:
  15:../src/r_main.c **** * http://www.renesas.com/disclaimer
  16:../src/r_main.c **** *
  17:../src/r_main.c **** * Copyright (C) 2011, 2021 Renesas Electronics Corporation. All rights reserved.
  18:../src/r_main.c **** ***************************************************************************************************
  19:../src/r_main.c **** 
  20:../src/r_main.c **** /**************************************************************************************************
  21:../src/r_main.c **** * File Name    : r_main.c
  22:../src/r_main.c **** * Version      : CodeGenerator for RL78/G13 V2.05.06.02 [08 Nov 2021]
  23:../src/r_main.c **** * Device(s)    : R5F100LF
  24:../src/r_main.c **** * Tool-Chain   : GCCRL78
  25:../src/r_main.c **** * Description  : This file implements main function.
  26:../src/r_main.c **** * Creation Date: 7/28/2024
  27:../src/r_main.c **** ***************************************************************************************************
  28:../src/r_main.c **** 
  29:../src/r_main.c **** /**************************************************************************************************
  30:../src/r_main.c **** Includes
  31:../src/r_main.c **** ***************************************************************************************************
  32:../src/r_main.c **** #include "r_cg_macrodriver.h"
  33:../src/r_main.c **** #include "r_cg_cgc.h"
  34:../src/r_main.c **** #include "r_cg_pfdl.h"
  35:../src/r_main.c **** #include "r_cg_port.h"
  36:../src/r_main.c **** #include "r_cg_intc.h"
  37:../src/r_main.c **** #include "r_cg_serial.h"
  38:../src/r_main.c **** #include "r_cg_timer.h"
  39:../src/r_main.c **** /* Start user code for include. Do not edit comment generated here */
  40:../src/r_main.c **** #include "string.h"
  41:../src/r_main.c **** #include <DGC_A230_Define.h>
  42:../src/r_main.c **** /* End user code. Do not edit comment generated here */
  43:../src/r_main.c **** #include "r_cg_userdefine.h"
  44:../src/r_main.c **** 
  45:../src/r_main.c **** /**************************************************************************************************
  46:../src/r_main.c **** Global variables and functions
  47:../src/r_main.c **** ***************************************************************************************************
  48:../src/r_main.c **** /* Start user code for global. Do not edit comment generated here */
  49:../src/r_main.c **** 
  50:../src/r_main.c **** uint8_t Display_Mode = NORMAL_MODE;
  51:../src/r_main.c **** extern char Parameter_Name[2];
  52:../src/r_main.c **** extern char Parameter_Value[2];
  53:../src/r_main.c **** extern uint8_t	HMI_Flash_Count;
  54:../src/r_main.c **** extern uint8_t Mask;
  55:../src/r_main.c **** extern uint8_t HMI_Flash_Enable;
  56:../src/r_main.c **** extern struct Device_Config_Parameters CFG_parameter;
  57:../src/r_main.c **** extern uint8_t Last_Open_Command_State, Last_Close_Command_State, Last_Clock_Command_State;
  58:../src/r_main.c **** 
  59:../src/r_main.c **** uint8_t Power_failure;
  60:../src/r_main.c **** 
  61:../src/r_main.c **** /* End user code. Do not edit comment generated here */
  62:../src/r_main.c **** void R_MAIN_UserInit(void);
  63:../src/r_main.c **** 
  64:../src/r_main.c **** /**************************************************************************************************
  65:../src/r_main.c **** * Function Name: main
  66:../src/r_main.c **** * Description  : This function implements main function.
  67:../src/r_main.c **** * Arguments    : None
  68:../src/r_main.c **** * Return Value : None
  69:../src/r_main.c **** ***************************************************************************************************
  70:../src/r_main.c **** void main(void)
  71:../src/r_main.c **** {
  50                             		.loc 1 71 0
  51                             		; start of function
  52                             		; outgoing: 6 bytes
  53                             		; uses ES register
  54 0000 20 06                   		subw	sp, #6
  55                             	.LCFI0:
  72:../src/r_main.c ****     R_MAIN_UserInit();
  56                             		.loc 1 72 0
  57 0002 FC 00 00 00             		call	!!%code(_R_MAIN_UserInit)
  73:../src/r_main.c ****     /* Start user code. Do not edit comment generated here */
  74:../src/r_main.c ****     memcpy(&Parameter_Name[0], "--", sizeof("--"));
  58                             		.loc 1 74 0
  59 0006 30 00 00                		movw	ax, #_Parameter_Name
  60 0009 B8 00                   		movw	[sp], ax
  61 000b 30 00 00                		movw	ax, #.LC0
  62 000e B8 02                   		movw	[sp+2], ax
  63 0010 30 03 00                		movw	ax, #3
  64 0013 B8 04                   		movw	[sp+4], ax
  65 0015 FC 00 00 00             		call	!!%code(_memcpy)
  75:../src/r_main.c **** 	memcpy(&Parameter_Value[0], "--", sizeof("--"));
  66                             		.loc 1 75 0
  67 0019 30 00 00                		movw	ax, #_Parameter_Value
  68 001c B8 00                   		movw	[sp], ax
  69 001e 30 00 00                		movw	ax, #.LC0
  70 0021 B8 02                   		movw	[sp+2], ax
  71 0023 30 03 00                		movw	ax, #3
  72 0026 B8 04                   		movw	[sp+4], ax
  73 0028 FC 00 00 00             		call	!!%code(_memcpy)
  76:../src/r_main.c **** 
  77:../src/r_main.c **** 	Display_Mode = PARA_MODE;
  74                             		.loc 1 77 0
  75 002c 51 03                   		mov	a, #3
  76 002e 9F 00 00                		mov	!_Display_Mode, a
  78:../src/r_main.c **** 
  79:../src/r_main.c **** 	R_TAU0_Channel0_Start();					// Start Timer channel 0 for display
  77                             		.loc 1 79 0
  78 0031 FC 00 00 00             		call	!!%code(_R_TAU0_Channel0_Start)
  80:../src/r_main.c **** 	R_TAU0_Channel4_Start();					// Start Timer channel 4 for display
  79                             		.loc 1 80 0
  80 0035 FC 00 00 00             		call	!!%code(_R_TAU0_Channel4_Start)
  81:../src/r_main.c **** 
  82:../src/r_main.c **** 	HMI_Flash_Count = 0;
  81                             		.loc 1 82 0
  82 0039 F5 00 00                		clrb	!_HMI_Flash_Count
  83:../src/r_main.c **** 	HMI_Flash_Enable = 1;
  83                             		.loc 1 83 0
  84 003c E5 00 00                		oneb	!_HMI_Flash_Enable
  84:../src/r_main.c **** 
  85:../src/r_main.c **** 	while (HMI_Flash_Count <10);
  85                             		.loc 1 85 0
  86 003f 00                      		nop
  87                             	.L2:
  88                             		.loc 1 85 0 is_stmt 0 discriminator 1
  89 0040 8F 00 00                		mov	a, !_HMI_Flash_Count
  90 0043 9D F0                   		mov	r8, a
  91 0045 4A F0 09                		cmp	r8, #9
  92 0048 61 E3                   		 skh
  93 004a EC 40 00 00             		 br	!!.L2
  86:../src/r_main.c **** 
  87:../src/r_main.c **** 	HMI_Flash_Enable = 0;
  94                             		.loc 1 87 0 is_stmt 1
  95 004e F5 00 00                		clrb	!_HMI_Flash_Enable
  88:../src/r_main.c **** 	Mask = 0xff;
  96                             		.loc 1 88 0
  97 0051 51 FF                   		mov	a, #-1
  98 0053 9F 00 00                		mov	!_Mask, a
  89:../src/r_main.c **** 
  90:../src/r_main.c **** 	Display_Mode = NORMAL_MODE;
  99                             		.loc 1 90 0
 100 0056 F5 00 00                		clrb	!_Display_Mode
  91:../src/r_main.c **** 
  92:../src/r_main.c ****     R_FDL_Create();
 101                             		.loc 1 92 0
 102 0059 FC 00 00 00             		call	!!%code(_R_FDL_Create)
  93:../src/r_main.c **** 
  94:../src/r_main.c ****     if ((!LEFT_KEY)&&(!RIGHT_KEY))					// if Left_Key and Right_Key are pressed
 103                             		.loc 1 94 0
 104 005d C9 F0 07 FF             		movw	r8, #-249
 105 0061 AD F0                   		movw	ax, r8
 106 0063 BD F2                   		movw	r10, ax
 107 0065 FA F2                   		movw	hl, r10
 108 0067 8B                      		mov	a, [hl]
 109 0068 9D F0                   		mov	r8, a
 110 006a 31 7A                   		shr	a, 7
 111 006c 9D F0                   		mov	r8, a
 112 006e D4 F0                   		cmp0	r8
 113 0070 61 E8                   		 skz
 114 0072 EC 97 00 00             		 br	!!.L3
 115                             		.loc 1 94 0 is_stmt 0 discriminator 1
 116 0076 C9 F0 07 FF             		movw	r8, #-249
 117 007a AD F0                   		movw	ax, r8
 118 007c BD F2                   		movw	r10, ax
 119 007e FA F2                   		movw	hl, r10
 120 0080 8B                      		mov	a, [hl]
 121 0081 9D F0                   		mov	r8, a
 122 0083 31 5A                   		shr	a, 5
 123 0085 9D F0                   		mov	r8, a
 124 0087 5A F0 01                		and	r8, #1
 125 008a 61 E8                   		skz
 126 008c EC 97 00 00             		 br	!!.L3
 127                             		 # zero-comparison eliminated
  95:../src/r_main.c ****     	Reset_Factory_Default_Parameters(0x00);		// Reset Factory Default Parameters
 128                             		.loc 1 95 0 is_stmt 1
 129 0090 F6                      		clrw	ax
 130 0091 B8 00                   		movw	[sp], ax
 131 0093 FC 00 00 00             		call	!!%code(_Reset_Factory_Default_Parameters)
 132                             	.L3:
  96:../src/r_main.c **** 
  97:../src/r_main.c ****     Read_Parameters_From_Flash_Memory();			// Read Configuration Parameters
 133                             		.loc 1 97 0
 134 0097 FC 00 00 00             		call	!!%code(_Read_Parameters_From_Flash_Memory)
  98:../src/r_main.c **** 
  99:../src/r_main.c ****     Calculate_CFG_Parameters();						// Calculate Working parameters
 135                             		.loc 1 99 0
 136 009b FC 00 00 00             		call	!!%code(_Calculate_CFG_Parameters)
 100:../src/r_main.c **** 
 101:../src/r_main.c ****     Power_failure = POWER_FAILURE_STATE;
 137                             		.loc 1 101 0
 138 009f E5 00 00                		oneb	!_Power_failure
 102:../src/r_main.c ****     if (CFG_parameter.Auto_Close_After_Power == 0x01)
 139                             		.loc 1 102 0
 140 00a2 8F 00 00                		mov	a, !_CFG_parameter+50
 141 00a5 9D F0                   		mov	r8, a
 142 00a7 4A F0 01                		cmp	r8, #1
 143 00aa 61 E8                   		 skz
 144 00ac EC B4 00 00             		 br	!!.L4
 103:../src/r_main.c ****     	Auto_Power_Failure_Recovery_Process();
 145                             		.loc 1 103 0
 146 00b0 FC 00 00 00             		call	!!%code(_Auto_Power_Failure_Recovery_Process)
 147                             	.L4:
 104:../src/r_main.c **** 
 105:../src/r_main.c ****     Last_Open_Command_State = COMMAND_RELEASE_STATE;
 148                             		.loc 1 105 0
 149 00b4 E5 00 00                		oneb	!_Last_Open_Command_State
 106:../src/r_main.c ****     Last_Close_Command_State = COMMAND_RELEASE_STATE;
 150                             		.loc 1 106 0
 151 00b7 E5 00 00                		oneb	!_Last_Close_Command_State
 107:../src/r_main.c ****     Last_Clock_Command_State = COMMAND_RELEASE_STATE;
 152                             		.loc 1 107 0
 153 00ba E5 00 00                		oneb	!_Last_Clock_Command_State
 108:../src/r_main.c **** 
 109:../src/r_main.c ****     Normal_Mode();									// Normal working
 154                             		.loc 1 109 0
 155 00bd FC 00 00 00             		call	!!%code(_Normal_Mode)
 156                             	.L5:
 110:../src/r_main.c **** 
 111:../src/r_main.c ****     while (1U)
 112:../src/r_main.c ****     {
 113:../src/r_main.c ****     	;
 114:../src/r_main.c ****     }
 157                             		.loc 1 114 0 discriminator 1
 158 00c1 EC C1 00 00             		br	!!.L5
 159                             	.LFE0:
 161                             		.section	.text.R_MAIN_UserInit,"ax",@progbits
 162                             		.global	_R_MAIN_UserInit
 164                             	_R_MAIN_UserInit:
 165                             	.LFB1:
 115:../src/r_main.c **** 
 116:../src/r_main.c ****     /* End user code. Do not edit comment generated here */
 117:../src/r_main.c **** }
 118:../src/r_main.c **** 
 119:../src/r_main.c **** 
 120:../src/r_main.c **** /**************************************************************************************************
 121:../src/r_main.c **** * Function Name: R_MAIN_UserInit
 122:../src/r_main.c **** * Description  : This function adds user code before implementing main function.
 123:../src/r_main.c **** * Arguments    : None
 124:../src/r_main.c **** * Return Value : None
 125:../src/r_main.c **** ***************************************************************************************************
 126:../src/r_main.c **** void R_MAIN_UserInit(void)
 127:../src/r_main.c **** {
 166                             		.loc 1 127 0
 128:../src/r_main.c ****     /* Start user code. Do not edit comment generated here */
 129:../src/r_main.c ****     EI();
 167                             		.loc 1 129 0
 168                             	 ; 129 "../src/r_main.c" 1
 169 0000 71 7A FA                		ei
 170                             	 ; 0 "" 2
 130:../src/r_main.c ****     /* End user code. Do not edit comment generated here */
 131:../src/r_main.c **** }
 171                             		.loc 1 131 0
 172 0003 D7                      		ret
 173                             	.LFE1:
 213                             	.Letext0:
 214                             		.file 2 "E:/AIoT/Code/Rogger/DGC_A230_6_Rev_1_0_Software/generate/iodefine.h"
 215                             		.file 3 "../src/r_cg_macrodriver.h"
 216                             		.file 4 "E:\\AIoT\\Code\\Rogger\\DGC_A230_6_Rev_1_0_Software\\DGC_A230_Functions/DGC_A230_Define.h
